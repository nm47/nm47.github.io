{"version":3,"sources":["webpack:///./src/components/blogpost/blogpost.module.css","webpack:///./src/components/blogpost/index.js","webpack:///./src/templates/blogTemplate.js"],"names":["module","exports","Blogpost","children","className","classes","wrapper","Template","markdownRemark","data","frontmatter","html","title","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,QAAU,oC,yKCObC,EAJE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OAAO,yBAAKC,UAAWC,IAAQC,SAAUH,ICmC5B,SAASI,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAWrB,OACE,kBAAC,EAAD,KACE,yBAAKP,UAAU,aACb,4BAAKM,EAAYE,OACjB,4BAAKF,EAAYG,MACjB,yBACET,UAAU,oBACVU,wBAAyB,CAAEC,OAAQJ,OAOtC,IAAMK,EAAS","file":"component---src-templates-blog-template-js-1ff68871c0df0811eddf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"blogpost-module--wrapper--2C02B\"};","import React from \"react\";\n\nimport classes from \"./blogpost.module.css\";\n\nconst Blogpost = ({ children }) => {\n  return <div className={classes.wrapper}>{children}</div>;\n};\n\nexport default Blogpost;\n","import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { graphql } from \"gatsby\";\nimport Blogpost from \"../components/blogpost\";\n\n// Hook\nfunction useWindowSize(){\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    } // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nfunction showViewport() {\n  var width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  var height= Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n} \n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n\n  //const size = useWindowSize();\n\n  let textMargin = '8%'\n\n  var styles = {\n\t  margin: 'auto',\n\t  width: '60%'\n  };\n\n  return (\n    <Blogpost>\n      <div className=\"blog-post\">\n        <h1>{frontmatter.title}</h1>\n        <h2>{frontmatter.date}</h2>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Blogpost>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}