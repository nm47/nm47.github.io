{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/Melzi","result":{"data":{"markdownRemark":{"html":"<p>Back in 2016, I got a 3d printer, the moniprice maker select v2.1. But not until years later did I realize that the firmware on the stock \"Melzi\" board did not have thermal runaway protection. This meant that if the thermistor in the hotend ever died, it would report 0 degrees, and the hotend would get hotter and hotter until it would very likely catch fire. I set out to fix it before I printed anything else.</p>\n<p><strong>New Firmware</strong><br>\nI decided to install the marlin firmware <a href=\"http://marlinfw.org/meta/download/\">found here,</a> and while it was not built exactly for my printer, it only took a few modifications (shown below) till it was ready to be uploaded.</p>\n<pre><code class=\"language-python\">Line 122: #define MOTHERBOARD BOARD_MELZI\n\nLine 140: #define DEFAULT_NOMINAL_FILAMENT_DIA 1.75\n\nLine ~290: \n#define TEMP_SENSOR_0 1    |\n#define TEMP_SENSOR_1 0    |\n#define TEMP_SENSOR_2 0    | I only have one thermister, so we only need SENSOR_0\n#define TEMP_SENSOR_3 0    |\n#define TEMP_SENSOR_4 0    |\n#define TEMP_SENSOR_BED 1  |\n\nLine ~517:\n#define X_MIN_ENDSTOP_INVERTING true  // true to invert the logic of the endstop.\n#define Y_MIN_ENDSTOP_INVERTING true  \n#define Z_MIN_ENDSTOP_INVERTING true \n#define X_MAX_ENDSTOP_INVERTING false // false, this one was fine\n#define Y_MAX_ENDSTOP_INVERTING false \n#define Z_MAX_ENDSTOP_INVERTING false\n#define Z_MIN_PROBE_ENDSTOP_INVERTING // I don't have a probe for my printer. \n\nLine ~550:\n#define DEFAULT_AXIS_STEPS_PER_UNIT   { 80, 80, 400, 94 } //settings found in my printer documentation\n#define DEFAULT_MAX_FEEDRATE          { 300, 300, 5, 25 }\n#define DEFAULT_MAX_ACCELERATION      { 1500, 1500, 100, 10000 }\n#define DEFAULT_ACCELERATION          700   \n#define DEFAULT_RETRACT_ACCELERATION  2000 // I wanted it relatively slow to avoid extrusion problems. \n#define DEFAULT_TRAVEL_ACCELERATION   700  // Slow to avoid ghosting.  \n#define DEFAULT_XJERK                  8.0\n#define DEFAULT_YJERK                  8.0\n#define DEFAULT_ZJERK                  0.4\n#define DEFAULT_EJERK                  5.0\n\nLine  ~773:\n#define INVERT_X_DIR false\n#define INVERT_Y_DIR false\n#define INVERT_Z_DIR true\n#define INVERT_E0_DIR true\n#define INVERT_E1_DIR false\n#define INVERT_E2_DIR false\n#define INVERT_E3_DIR false\n#define INVERT_E4_DIR false\n\nLine ~814: #define Z_MAX_POS 190 //with z supports reducing my z height, 190 is my new max height\n</code></pre>\n<p>Unfortunately, the Melzi board does not have a bootloader, and therefore you cannot simply flash any firmware you want. </p>\n<h2>Bootloader</h2>\n<p>The Melzi board seems to be a derivative of the sanguino, which makes it pretty easy to use an arduino uno as a middle man <a href=\"https://github.com/Lauszus/Sanguino\">using this library</a> to flash a firmware to the Melzi.</p>","frontmatter":{"date":"May 02, 2019","path":"/blog/Melzi","title":"Replacing Stock Melzi Firmware on MMS V2.1"}}},"pageContext":{}}}